# Base worker process settings
worker_processes auto;
pid /tmp/nginx.pid;
error_log /dev/stdout info; # Log errors to Docker console

events {
    worker_connections 1024;
}

# RTMP Server Block
rtmp {
    server {
        listen 1935; # Listen on the default RTMP port
        chunk_size 4096;

        # Live application for receiving streams
        application live {
            live on; # Enable live streaming
            record off; # Disable recording stream to disk (optional)

            # --- HLS Conversion ---
            hls on; # Enable HLS generation
            hls_path /tmp/hls; # Directory to store HLS files (inside the container)
            hls_fragment 3s; # Duration of each HLS segment
            hls_playlist_length 15s; # Length of the HLS playlist (rolling window)
            hls_nested on; # Optional: Create subdirectory per stream key
            # --- End HLS Conversion ---

            # Optional: Allow publishing only from localhost (within Docker network)
            # allow publish 127.0.0.1;
            # deny publish all;

            # Optional: Allow playback only from localhost (or specific IPs)
            # allow play 127.0.0.1;
            # deny play all;
        }
    }
}

# HTTP Server Block
http {
    # Define MIME types for HLS
    types {
        application/vnd.apple.mpegurl m3u8;
        video/mp2t ts;
        text/html html;
        text/css css;
        application/javascript js;
    }

    # Default settings
    default_type application/octet-stream;
    sendfile on;
    tcp_nopush on;
    keepalive_timeout 65;
    server_tokens off; # Hide Nginx version

    # Server to serve HLS files and the frontend
    server {
        listen 8080; # Listen on HTTP port for playback and frontend

        # Serve the frontend files
        location / {
            root /usr/share/nginx/html; # Path inside the container where frontend files will be copied
            index index.html;
            try_files $uri $uri/ /index.html; # Standard SPA routing fallback (optional)
        }

        # Serve the HLS files
        location /hls {
            alias /tmp/hls; # Match the hls_path from the RTMP block
            add_header Cache-Control no-cache; # Ensure player gets fresh playlist/segments

            # --- CORS Headers ---
            # Allow requests from any origin to fetch HLS files.
            # IMPORTANT: For production, restrict this to your frontend's domain.
            add_header 'Access-Control-Allow-Origin' '*' always;
            add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range';
            add_header 'Access-Control-Allow-Headers' 'Range';
            if ($request_method = 'OPTIONS') {
                add_header 'Access-Control-Allow-Origin' '*';
                add_header 'Access-Control-Allow-Methods' 'GET, OPTIONS';
                add_header 'Access-Control-Allow-Headers' 'Range,DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type';
                add_header 'Access-Control-Max-Age' 1728000;
                add_header 'Content-Type' 'text/plain charset=UTF-8';
                add_header 'Content-Length' 0;
                return 204;
            }
            # --- End CORS Headers ---
        }

        # Optional: Deny access to the raw HLS temp directory listing
        location = /hls/ {
           internal;
        }
        
        # Proxy API requests to the backend server
        location /send-email {
            proxy_pass http://backend:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
}
